% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression.R
\name{regression}
\alias{regression}
\alias{network_reg}
\title{Linear regression for network data}
\usage{
network_reg(
  formula,
  data,
  method = c("qap", "qapy"),
  times = 1000,
  parallel = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{formula}{A formula describing the relationship being tested.
Several additional terms are available to assist users investigate
the effects they are interested in. These include:
\itemize{
\item \code{ego()} tests whether a nodal attribute relates to outgoing ties
\item \code{alter()} tests whether a nodal attribute relates to incoming ties
\item \code{same()} adds a 1 if two nodes' attribute values are the same
}}

\item{data}{An igraph, network, or tidygraph object.}

\item{method}{A method for establishing the null hypothesis.
Note that "qap" currently defaults to Dekker et al's double semi-partialling technique.}

\item{times}{Integer indicating the number of draws to use for quantile
estimation. (Relevant to the null hypothesis test only - the analysis
itself is unaffected by this parameter.)
Note that, as for all Monte Carlo procedures, convergence is slower for more
extreme quantiles.
By default, times=1000.
1,000 - 10,000 repetitions recommended for publication-ready results.}
}
\description{
This function provides a parallelised implementation of
the multiple regression quadratic assignment procedure (MRQAP)
for both one-mode and two-mode network linear models.
It offers several advantages:
\itemize{
\item it works with combined graph/network objects such as igraph and network objects
by constructing the various dependent and independent matrices for the user.
\item it offers a more intuitive formula-based system for specifying the model.
\item it offers more straightforward printing of results that can combine with
results from fitting other models.
}
}
\examples{
messages <- mutate_edges(ison_eies, 
  generate_random(ison_eies), attr_name = "random")
(model1 <- network_reg(weight ~ random + 
  same(Discipline) + same(Citations), messages, times = 500))
 messaged <- messages \%>\% activate(edges) \%>\% 
   tidygraph::mutate(weight = (weight > 0)*1)
(model2 <- network_reg(weight ~ random + 
  same(Discipline) + same(Citations), messaged, times = 500))
tidy(model1)
}
\references{
Dekker, D., Krackhard, D., Snijders, T.A.B (2007)
Sensitivity of MRQAP tests to collinearity and autocorrelation conditions.
Psychometrika 72(4): 563-581.
}
