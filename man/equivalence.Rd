% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/member_equivalence.R
\name{equivalence}
\alias{equivalence}
\alias{node_structural_equivalence}
\alias{node_regular_equivalence}
\alias{node_automorphic_equivalence}
\title{Equivalence clustering algorithms}
\source{
\url{https://github.com/aslez/concoR}
}
\usage{
node_structural_equivalence(
  object,
  select = c("strict", "elbow", "silhouette"),
  cluster = c("hier", "concor"),
  distance = c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
)

node_regular_equivalence(
  object,
  select = c("strict", "elbow", "silhouette"),
  distance = c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
)

node_automorphic_equivalence(
  object,
  select = c("strict", "elbow", "silhouette"),
  distance = c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski")
)
}
\arguments{
\item{object}{An object of a migraph-consistent class:
\itemize{
\item matrix, from base R
\item edgelist, a data frame from base R or tibble from tibble
\item igraph, from the igraph package
\item network, from the network package
\item tbl_graph, from the tidygraph package
}}

\item{select}{Character string indicating which method
should be used to select the number of clusters to cut
the tree at.
By default \code{"strict"} to return classes with members only
when strictly equivalent.
Other options (\code{"elbow"} and \code{"silhouette"}) relax this strict assumption,
generally providing more useful results.
Fewer, identifiable letters, e.g. \code{"s"} for silhouette, is sufficient.}

\item{cluster}{Character string indicating whether clusters should be
clustered hierarchically (\code{"hierarchical"}) or
through convergence of correlations (\code{"concor"}).
This option is available only in \code{node_structural_equivalence()}.
Fewer, identifiable letters, e.g. \code{"c"} for CONCOR, is sufficient.}

\item{distance}{Character string indicating which distance metric
to pass on to \code{stats::dist}.
By default \code{"euclidean"}, but other options include
\code{"maximum"}, \code{"manhattan"}, \code{"canberra"}, \code{"binary"}, and \code{"minkowski"}.
Fewer, identifiable letters, e.g. \code{"e"} for Euclidean, is sufficient.}
}
\description{
These functions combine an appropriate \verb{_census()} function
together with methods for calculating the hierarchical clusters
provided by a certain distance calculation.

A \code{plot()} method exists for investigating the dendrogram
of the hierarchical cluster and showing the returned cluster
assignment.
}
\section{Functions}{
\itemize{
\item \code{node_structural_equivalence}: Returns nodes' membership in
structurally equivalent classes

\item \code{node_regular_equivalence}: Returns nodes' membership in
regularly equivalent classes

\item \code{node_automorphic_equivalence}: Returns nodes' membership in
automorphically equivalent classes
}}

\examples{
nse_hier <- node_structural_equivalence(ison_adolescents, 
                  cluster = "c")
plot(nse_hier)
nse_conc <- node_structural_equivalence(ison_adolescents, 
                  cluster = "concor")
nse_conc <- node_structural_equivalence(ison_southern_women, 
                  cluster = "concor")
plot(nse_conc)
(nre <- node_regular_equivalence(ison_algebra, "elbow"))
plot(nre)
(nre2 <- node_regular_equivalence(ison_algebra, "silhouette"))
plot(nre2)
(nae <- node_automorphic_equivalence(mpn_elite_mex, select = "elbow"))
plot(nae)
(nae2 <- node_automorphic_equivalence(mpn_elite_usa_advice, select = "elbow"))
plot(nae2)
}
\references{
Thorndike, Robert L. 1953.
"Who Belongs in the Family?".
\emph{Psychometrika}.
18 (4): 267â€“276.
\doi{10.1007/BF02289263}

Breiger, R.L., Boorman, S.A., and Arabie, P.  1975.
An Algorithm for Clustering Relational Data with Applications to
Social Network Analysis and Comparison with Multidimensional Scaling.
\emph{Journal of Mathematical Psychology}, 12: 328--383.
}
\seealso{
Other membership: 
\code{\link{community}},
\code{\link{components}()}
}
\concept{membership}
